version: '3.8'

services:
  # Vector Database API
  api:
    build: .
    container_name: vector-db-api
    network_mode: "host"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./app:/app/app  # For development hot-reloading
    env_file:
      - .env
    environment:
      - API_PORT=${API_PORT:-8000}
      - API_HOST=${API_HOST:-0.0.0.0}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:5173,http://localhost:5174,http://localhost:5175,http://localhost:5176,*}
      - PGVECTOR_CONNECTION_STRING=${PGVECTOR_CONNECTION_STRING:-postgresql://postgres:postgres@localhost:5432/vectordb}
      - ENABLE_PGVECTOR=${ENABLE_PGVECTOR:-true}
      - ENABLE_PINECONE=${ENABLE_PINECONE:-false}
      - PINECONE_API_KEY=${PINECONE_API_KEY:-}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT:-}
      - PINECONE_INDEX=${PINECONE_INDEX:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dpais}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
      - EMBEDDINGS_MODEL=${EMBEDDINGS_MODEL:-nomic-embed-text-v1.5}
    depends_on:
      - pgvector

  # PostgreSQL with pgvector extension
  pgvector:
    image: docker.io/ankane/pgvector
    container_name: pgvector-db
    network_mode: "host"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vectordb
    volumes:
      - ./data/pgvector:/var/lib/postgresql/data  # Local directory mount for persistent data
      - ./scripts/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql 